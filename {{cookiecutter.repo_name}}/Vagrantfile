# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$script = <<SCRIPT
echo I am provisioning...
date > /etc/vagrant_provisioned_at
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "ubuntu/trusty64"

  if Vagrant.has_plugin?("vagrant-cachier")
    # Configure cached packages to be shared between instances of the same base box.
    config.cache.scope = :box
  end

  config.vm.define "full", primary: true do |full|
    config.vm.provision :shell, :path => "config/vagrant/bootstrap.sh"

    config.vm.network "private_network", ip: "192.168.33.10"
    config.vm.host_name = "{{cookiecutter.repo_name}}.dev"

    # SETTINGS FOR PRODUCTION
    #config.vm.network "public_network", bridge: 'wlan0'
    #config.vm.host_name = "{{cookiecutter.repo_name}}prod"
    #config.vm.network "forwarded_port", guest: 80, host: 80
    #config.ssh.port = '2222'
    #config.ssh.guest_port = '2223'

  end

  config.vm.define "db", autostart: false do |db|
    config.vm.provision "shell", inline: $script

    config.vm.host_name = "postgresql"

    config.vm.provision :shell, :path => "config/vagrant/bootstrap-postgresql-machine.sh"

    # PostgreSQL Server port forwarding
    config.vm.network "forwarded_port", guest: 5432, host: 15432

  end

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  config.ssh.private_key_path = [ '~/.vagrant.d/insecure_private_key', '~/.ssh/id_rsa' ]
  config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Don't boot with headless mode
  #   vb.gui = true
  #
  #   # Use VBoxManage to customize the VM. For example to change memory:
  #   vb.customize ["modifyvm", :id, "--memory", "1024"]
  # end
  #
  # View the documentation for the provider you're using for more
  # information on available options.

end
